{"version":3,"file":"component---src-pages-index-tsx-0b6248882b8fca7b5e2c.js","mappings":"yIAkCA,IAtBeA,IAAmC,IAAlC,SAAEC,GAA0B,EAC1C,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,SAAAA,MAGAA,EAAAA,cAAAA,OAAAA,CAAMC,MAAO,CAACC,UAAW,GAAIC,QAAS,KAAMJ,GAC5CC,EAAAA,cAAAA,SAAAA,CACEC,MAAO,CACLG,OAAQ,KAGVJ,EAAAA,cAAAA,IAAAA,CAAGK,KAAK,KAAG,QAEd,C,sDCKP,UAVkBP,IAAA,IAAC,KAACQ,GAAkB,SACpCN,EAAAA,cAACO,EAAAA,EAAM,KACJD,EAAKE,kBAAkBC,MAAMC,UAAUC,KAAI,CAACC,EAA+CC,IACnFb,EAAAA,cAAAA,MAAAA,CAAKc,IAAKD,GACfb,EAAAA,cAAAA,IAAAA,CAAGK,KAAI,UAAYO,EAAKG,YAAYC,GAAMC,wBAAyB,CAACC,OAAQN,EAAKG,YAAYI,YAG1F,C","sources":["webpack://umekawa_github_io/./src/components/layout.tsx","webpack://umekawa_github_io/./src/pages/index.tsx"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }:{children: any}) => {\n  return (\n    <>\n        <header>\n\n        </header>\n        <main style={{marginTop: 16, padding: 24}}>{children}</main>\n        <footer\n          style={{\n            margin: 24,\n          }}\n        >\n          <a href=\"/\">Top</a>\n        </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport \"prismjs/themes/prism-dark.css\"\nimport \"../components/codeblock.css\"\n\nexport const query = graphql`\n  query MyQuery {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___date] }) {\n      nodes {\n        id\n        frontmatter {\n          date\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = ({data}: {data: any}) => (\n  <Layout>\n    {data.allMarkdownRemark.nodes.reverse().map((node: { frontmatter: { id: any; title: any } },i: React.Key | null | undefined)=>{\n      return <div key={i}>\n        <a href={`/diary/${node.frontmatter.id}`} dangerouslySetInnerHTML={{__html: node.frontmatter.title}}/>\n      </div>\n    })}\n  </Layout>\n)\n\nexport default IndexPage\n"],"names":["_ref","children","React","style","marginTop","padding","margin","href","data","Layout","allMarkdownRemark","nodes","reverse","map","node","i","key","frontmatter","id","dangerouslySetInnerHTML","__html","title"],"sourceRoot":""}